<Project>

  <!--
    ********************************************
     Alternate pack phase 1: publish to folders
    ********************************************
  -->

  <!-- Call PublishInPublishFolders target as part of alternate pack.-->
  <PropertyGroup>
    <PackDependsOn>$(PackDependsOn);PublishInPublishFolders</PackDependsOn>
  </PropertyGroup>

  <!--
    ======================================================================
     Publish project in publish folders according to PublishFolder items.
    ======================================================================
  -->
  <Target Name="PublishInPublishFolders"
          Condition="@(PublishFolder->Count()) > 0"
          DependsOnTargets="$(PublishInPublishFoldersDependsOn);
                            ProcessPublishFoldersMetadata;
                            InvokePublishTargetForPublishFolders;
                            ZipPublishFolders" />

  <!--
    ==============================================================
     Validate metadata of PublishFolder items and apply defaults.
    ==============================================================
  -->
  <Target Name="ProcessPublishFoldersMetadata"
          Outputs="%(PublishFolder.Identity)">

    <!-- Copy metadata from the current item to properties. -->
    <PropertyGroup>
      <_Identity_>%(PublishFolder.Identity)</_Identity_>
      <_PublishDir_>%(PublishFolder.PublishDir)</_PublishDir_>
      <_Temporary_>%(PublishFolder.PublishDir)</_Temporary_>
      <_CreateZipFile_>%(PublishFolder.CreateZipFile)</_CreateZipFile_>
      <_ZipFileName_>%(PublishFolder.ZipFileName)</_ZipFileName_>
      <_UniqueZipFileName_>%(PublishFolder.UniqueZipFileName)</_UniqueZipFileName_>
      <_IsReleaseAsset_>%(PublishFolder.IsReleaseAsset)</_IsReleaseAsset_>
      <_ReleaseAssetMimeType_>%(PublishFolder.ReleaseAssetMimeType)</_ReleaseAssetMimeType_>
    </PropertyGroup>

    <PropertyGroup>

      <!-- PublishDir defaults to {artifacts directory}\{configuration}\{project name}\{publish folder}. -->
      <_PublishDir_ Condition="'$(_PublishDir_)' == ''">$(ArtifactsDirectory)$(Configuration)\$(MSBuildProjectName)\$(_Identity_)\</_PublishDir_>

      <!-- Temporary defaults to false. -->
      <_Temporary_ Condition="'$(_Temporary_)' != 'true'">false</_Temporary_>

      <!-- CreateZipFile is true if ZipFileName is specified. -->
      <_CreateZipFile_ Condition="'$(_ZipFileName_)' != ''">true</_CreateZipFile_>

      <!-- CreateZipFile is otherwise false by default. -->
      <_CreateZipFile_ Condition="'$(_CreateZipFile_)' != 'true'">false</_CreateZipFile_>

      <!-- UniqueZipFileName defaults to false. -->
      <_UniqueZipFileName_ Condition="$(_CreateZipFile_) And '$(_UniqueZipFileName_)' != 'true'">false</_UniqueZipFileName_>

    </PropertyGroup>

    <!-- Default ZipFileName depends upon UniqueZipFileName and the presence of AssemblyInformationalVersion. -->
    <PropertyGroup Condition="$(_CreateZipFile_) And '$(_ZipFileName_)' == ''">
      <_ZipFileName_>$(MSBuildProjectName)</_ZipFileName_>
      <_ZipFileName_ Condition="$(_UniqueZipFileName_)">$(_ZipFileName_)-$(_Identity_)</_ZipFileName_>
      <_ZipFileName_ Condition="'$(AssemblyInformationalVersion)' != ''">$(_ZipFileName_)_$(AssemblyInformationalVersion)</_ZipFileName_>
      <_ZipFileName_>$(_ZipFileName_).zip</_ZipFileName_>
    </PropertyGroup>

    <!--Put zipped publish folders in the configuration directory under artifacts -->
    <PropertyGroup Condition="$(_CreateZipFile_)">
      <_ZipFilePath_>$([MSBuild]::NormalizePath('$(ArtifactsDirectory)$(Configuration)', '$(_ZipFileName_)'))</_ZipFilePath_>
    </PropertyGroup>

    <PropertyGroup>

      <!-- IsReleaseAsset is true by default for zipped folders, always false otherwise. -->
      <_IsReleaseAsset_ Condition="$(_CreateZipFile_) And '$(_IsReleaseAsset_)' != 'false'">true</_IsReleaseAsset_>
      <_IsReleaseAsset_ Condition="!$(_CreateZipFile_)">false</_IsReleaseAsset_>

      <!-- ReleaseAssetMimeType defaults to application/zip. -->
      <_ReleaseAssetMimeType_ Condition="$(_IsReleaseAsset_) And '$(_ReleaseAssetMimeType_)' == ''">application/zip</_ReleaseAssetMimeType_>

      <!-- No need for a default ReleaseAssetDescription: it is taken care of in ReleaseAssetList module. -->
    </PropertyGroup>

    <!-- Update metadata. -->
    <ItemGroup>
      <PublishFolder Update="$(_Identity_)"
                     PublishDir="$(_PublishDir_)"
                     Temporary="$(_Temporary_)"
                     CreateZipFile="$(_CreateZipFile_)"
                     ZipFileName="$(_ZipFileName_)"
                     UniqueZipFileName="$(_UniqueZipFileName_)"
                     ZipFilePath="$(_ZipFilePath_)"
                     IsReleaseAsset="$(_IsReleaseAsset_)"
                     ReleaseAssetMimeType="$(_ReleaseAssetMimeType_)" />
    </ItemGroup>

    <!-- Don't leave stray properties around. -->
    <PropertyGroup>
      <_Identity_ />
      <_PublishDir_ />
      <_Temporary_ />
      <_CreateZipFile_ />
      <_ZipFileName_ />
      <_UniqueZipFileName_ />
      <_ZipFilePath_ />
      <_IsReleaseAsset_ />
      <_ReleaseAssetMimeType_ />
    </PropertyGroup>

  </Target>

  <!--
    ======================================================================
     Publish project in publish folders according to PublishFolder items.
    ======================================================================
  -->
  <Target Name="InvokePublishTargetForPublishFolders">

    <MSBuild Projects="$(MSBuildProjectFile)"
             Targets="Publish"
             Properties="PublishProtocol=FileSystem;
                         PublishingFolder=%(PublishFolder.Identity);
                         PublishDir=%(PublishFolder.PublishDir);
                         TargetFramework=%(PublishFolder.TargetFramework);
                         RuntimeIdentifier=%(PublishFolder.RuntimeIdentifier);
                         %(PublishFolder.Properties)" />

  </Target>

  <!--
    ==========================================
     Generate zip files from publish folders.
    ==========================================
  -->
  <Target Name="ZipPublishFolders">

    <!-- Create zip files for publish folders when configured to do so -->
    <ZipDirectory Condition="%(PublishFolder.CreateZipFile)"
                  SourceDirectory="%(PublishFolder.PublishDir)"
                  DestinationFile="%(PublishFolder.ZipFilePath)"
                  Overwrite="true" />

    <!-- Add created zip files to the release asset list-->
    <ItemGroup Condition="'$(GenerateReleaseAssetList)' == 'true'">
      <ReleaseAsset Include="%(PublishFolder.ZipFilePath)"
                    Condition="%(PublishFolder.IsReleaseAsset)"
                    MimeType="%(PublishFolder.ReleaseAssetMimeType)"
                    Description="%(PublishFolder.ReleaseAssetDescription)" />
    </ItemGroup>

  </Target>

  <!--
    =================================================================
     Remove temporary publish folders after the Pack target is done.
    =================================================================
  -->
  <Target Name="RemoveTemporaryPublishFolders"
          AfterTargets="Pack"
          Condition="@(PublishFolder->Count()) > 0">

    <RemoveDir Directories="%(PublishFolder.PublishDir)"
               Condition="'%(PublishFolder.Temporary)' == 'true'" />

  </Target>

</Project>
