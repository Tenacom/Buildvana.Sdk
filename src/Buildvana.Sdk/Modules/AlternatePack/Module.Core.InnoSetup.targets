<Project>

  <!-- Alternate pack method: use Inno Setup -->

  <PropertyGroup>
    <CompletePublishFolderMetadataDependsOn>$(CompletePublishFolderMetadataDependsOn);CompletePublishFolderMetadataForInnoSetup</CompletePublishFolderMetadataDependsOn>
  </PropertyGroup>

  <Target Name="CompletePublishFolderMetadataForInnoSetup">

    <ItemGroup>

      <!-- The default InnoSetupIncludePath is obj\{Configuration}\{Name of publish folder}.iss -->
      <PublishFolder Update="%(PublishFolder.Identity)"
                     Condition="'%(PublishFolder.SetupIncludeFile)' == ''"
                     InnoSetupIncludePath="$(BaseIntermediateOutputPath)$(Configuration)\%(PublishFolder.Identity).iss" />

    </ItemGroup>

  </Target>

  <Target Name="GenerateSetupIncludeFile"
          AfterTargets="Publish"
          DependsOnTargets="CompletePublishFolderMetadata"
          Condition="'$(PublishingFolder)' != ''">

    <PropertyGroup>
      <CompanyShortName Condition="'$(CompanyShortName)' == ''">$(Company)</CompanyShortName>
      <CompanyFullName Condition="'$(CompanyFullName)' == ''">$(Company)</CompanyFullName>
      <AppShortName Condition="'$(AppShortName)' == ''">$(AssemblyName)</AppShortName>
      <AppFullName Condition="'$(AppFullName)' == ''">$(Title)</AppFullName>
      <AppCopyright Condition="'$(AppCopyright)' == ''">$(Copyright)</AppCopyright>
      <AppDescription Condition="'$(AppDescription)' == ''">$(Description)</AppDescription>
      <AppMinWindowsVersion Condition="'$(AppMinWindowsVersion)' == ''">10.0.10240</AppMinWindowsVersion> <!-- Default to Windows 10 / 11 only -->
    </PropertyGroup>

    <PropertyGroup>
      <InnoSetupIncludePath Condition="'%(PublishFolder.Identity)' == '$(PublishingFolder)'">%(PublishFolder.InnoSetupIncludePath)</InnoSetupIncludePath>
    </PropertyGroup>

    <ItemGroup>
      <InnoSetupConstant Include="COMPANY_SHORTNAME" Value="$(CompanyShortName)" />
      <InnoSetupConstant Include="COMPANY_FULLNAME" Value="$(CompanyFullName)" />
      <InnoSetupConstant Include="COMPANY_WEBSITE" Value="$(CompanyWebSite)" />
      <InnoSetupConstant Include="COMPANY_SUPPORTPHONE" Value="$(CompanySupportPhone)" />
      <InnoSetupConstant Include="APP_EXENAME" Value="$(AssemblyName)" />
      <InnoSetupConstant Include="APP_SHORTNAME" Value="$(AssemblyName)" />
      <InnoSetupConstant Include="APP_FULLNAME" Value="$(AssemblyName)" />
      <InnoSetupConstant Include="APP_COMMENTS" Value="$(AppComments)" />
      <InnoSetupConstant Include="APP_CONTACT" Value="$(AppContact)" />
      <InnoSetupConstant Include="APP_COPYRIGHT" Value="$(AppCopyright)" />
      <InnoSetupConstant Include="APP_DESCRIPTION" Value="$(AppDescription)" />
      <InnoSetupConstant Include="APP_VERSION" Value="$(VersionPrefix)" />
      <InnoSetupConstant Include="APP_SEMANTIC_VERSION" Value="$(AssemblyInformationalVersion)" />
      <InnoSetupConstant Include="APP_MINWINDOWSVERSION" Value="$(AppMinWindowsVersion)" />
      <InnoSetupConstant Include="SOURCE_DIR" Value="$(PublishDir)" />
      <InnoSetupConstant Include="SETUP_DIR" Value="$(ArtifactsDirectory)$(Configuration)\$(MSBuildProjectName)" />
    </ItemGroup>

    <ItemGroup>
      <InnoSetupIncludeLine Include="#define %(InnoSetupConstant.Identity) '$([System.String]::new(&quot;%(InnoSetupConstant.Value)&quot;).Replace(&quot;'&quot;, &quot;''&quot;))'" />
    </ItemGroup>

    <WriteLinesToFile File="$(InnoSetupIncludePath)"
                      Lines="@(InnoSetupIncludeLine)"
                      Overwrite="true" />

    <ItemGroup>
      <InnoSetupIncludeLine Remove="@(InnoSetupIncludeLine)" />
    </ItemGroup>

  </Target>

  <!-- Generate setup -->

  <ItemGroup>
    <BV_PackageReference Include="Tools.InnoSetup"
                         IncludeAssets="build"
                         ExcludeAssets="runtime"
                         PrivateAssets="all" />
    <BV_PackageReference Include="Tools.InnoDownloadPlugin"
                         IncludeAssets="build"
                         ExcludeAssets="runtime"
                         PrivateAssets="all" />
  </ItemGroup>

  <Target Name="CompleteInnoSetupScriptMetadata"
          DependsOnTargets="CompletePublishFolderMetadata">

    <!--
      Add to InnoSetupScript items some metadata that depends on the metadata of its corresponding PublishFolder item.

      The only known method to combine two item groups A and B is to first do a complete cross-join, then remove from the result
      all items that did NOT result from matching an A item with its corresponding B item.

      If e.g. there are 5 PublishFolder items and 4 InnoSetupScript items, we end up with 20 _Temp items,
      of which only 4 are correct; namely, those where an InnoSetupScript item has been combined with the
      PublishFolder item corresponding to its UsePublishFolder metadata.

      In order to be able to tell matching items in the resulting item group, copy the identity of PublishFolder items
      to a PFIdentity metadata.
    -->
    <CreateItem Include="@(InnoSetupScript)"
                AdditionalMetadata="PFIdentity=%(PublishFolder.Identity);
                                    TargetFramework=%(PublishFolder.TargetFramework);
                                    RuntimeIdentifier=%(PublishFolder.RuntimeIdentifier);
                                    SourceDir=%(PublishFolder.PublishDir);
                                    IncludePath=$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '%(PublishFolder.InnoSetupIncludePath)'))">
      <Output ItemName="_Temp" TaskParameter="Include" />
    </CreateItem>

    <ItemGroup>

      <!--
        Remove all _Temp items whose PFIdentity metadata doesn't match their UsePublishFolder metadata.
        The remaining _Temp items are our resulting InnoSetupScript items with updated metadata.
      -->
      <_Temp Remove="%(_Temp.Identity)"
             Condition="'%(_Temp.PFIdentity)' != '%(_Temp.UsePublishFolder)'" />

      <!-- Replace the InnoSetupScript item group with the result, excluding the PFIdentity metadata that is now useless. -->
      <InnoSetupScript Remove="@(InnoSetupScript)" />
      <InnoSetupScript Include="@(_Temp)"
                       RemoveMetadata="PFIdentity" />

      <!-- Delete the _Temp item group to free up some memory. -->
      <_Temp Remove="@(_Temp)" />
    </ItemGroup>

  </Target>

  <PropertyGroup>
    <PackDependsOn>$(PackDependsOn);ProcessInnoSetupScripts</PackDependsOn>
  </PropertyGroup>

  <Target Name="ProcessInnoSetupScripts"
          DependsOnTargets="PublishInPublishFolders;CompleteInnoSetupScriptMetadata"
          Condition="@(InnoSetupScript->Count()) > 0">

    <MSBuild Projects="$(MSBuildProjectFile)"
             Targets="GenerateSetup"
             Properties="TargetFramework=%(InnoSetupScript.TargetFramework);
                         RuntimeIdentifier=%(InnoSetupScript.RuntimeIdentifier);
                         InnoSetupScriptFullPath=%(InnoSetupScript.FullPath);
                         InnoSetupIncludePath=%(InnoSetupScript.IncludePath)" />

  </Target>

  <Target Name="GenerateSetup">

    <PropertyGroup>
      <InnoSetupCommandLine>&quot;$(InnoSetupCompiler)&quot; &quot;/I$(InnoDownloadPluginDir)&quot; &quot;/J$(InnoSetupIncludePath)&quot; &quot;$(InnoSetupScriptFullPath)&quot;</InnoSetupCommandLine>
    </PropertyGroup>

    <Message Importance="High" Text="&gt;&gt;&gt;&gt;$(InnoSetupCommandLine)&lt;&lt;&lt;&lt;" />

    <Exec Command="$(InnoSetupCommandLine)" />

  </Target>

</Project>
