<Project>

  <!-- Redefine Pack target-->

  <PropertyGroup>
    <ImportNuGetBuildTasksPackTargetsFromSdk>false</ImportNuGetBuildTasksPackTargetsFromSdk>
  </PropertyGroup>

  <PropertyGroup>
    <IsInnerBuild Condition="'$(TargetFramework)' != '' AND '$(TargetFrameworks)' != ''">true</IsInnerBuild>
  </PropertyGroup>

  <PropertyGroup>
    <PackDependsOn>$(BeforePack);$(PackDependsOn)</PackDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <ProjectCapability Include="Pack" />
  </ItemGroup>

  <Target Name="Pack"
          DependsOnTargets="$(PackDependsOn)" />

  <!-- Xcopy deployment (also used by setup generation)  -->

  <Target Name="CompletePublishFolderMetadata">

    <ItemGroup>
      <PublishFolder Update="%(PublishFolder.Identity)"
                     Condition="'%(PublishFolder.SetupIncludeFile)' == ''"
                     InnoSetupIncludePath="$(BaseIntermediateOutputPath)$(Configuration)\%(PublishFolder.Identity).iss" />
      <PublishFolder Update="%(PublishFolder.Identity)"
                     Condition="'%(PublishFolder.PublishDir)' == ''"
                     PublishDir="$(ArtifactsDirectory)$(Configuration)\$(MSBuildProjectName)\%(PublishFolder.Identity)\" />
      <PublishFolder Update="%(PublishFolder.Identity)"
                     Condition="'%(PublishFolder.Temporary)' != 'true'"
                     Temporary="false" />
    </ItemGroup>

  </Target>

  <PropertyGroup>
    <PackDependsOn>$(PackDependsOn);PublishInPublishFolders</PackDependsOn>
  </PropertyGroup>

  <Target Name="PublishInPublishFolders"
          DependsOnTargets="CompletePublishFolderMetadata"
          Condition="@(PublishFolder->Count()) > 0">

    <MSBuild Projects="$(MSBuildProjectFile)"
             Targets="Publish"
             Properties="PublishingFolder=%(PublishFolder.Identity);
                         PublishProtocol=FileSystem;
                         PublishDir=%(PublishFolder.PublishDir);
                         TargetFramework=%(PublishFolder.TargetFramework);
                         RuntimeIdentifier=%(PublishFolder.RuntimeIdentifier);
                         %(PublishFolder.Properties)" />

  </Target>

  <Target Name="RemoveTemporaryPublishFolders"
          AfterTargets="Pack"
          DependsOnTargets="CompletePublishFolderMetadata"
          Condition="@(PublishFolder->Count()) > 0">

    <RemoveDir Directories="%(PublishFolder.PublishDir)"
               Condition="'%(PublishFolder.Temporary)' == 'true'" />

  </Target>

  <Target Name="GenerateSetupIncludeFile"
          AfterTargets="Publish"
          DependsOnTargets="CompletePublishFolderMetadata"
          Condition="'$(PublishingFolder)' != ''">

    <PropertyGroup>
      <CompanyShortName Condition="'$(CompanyShortName)' == ''">$(Company)</CompanyShortName>
      <CompanyFullName Condition="'$(CompanyFullName)' == ''">$(Company)</CompanyFullName>
      <AppShortName Condition="'$(AppShortName)' == ''">$(AssemblyName)</AppShortName>
      <AppFullName Condition="'$(AppFullName)' == ''">$(Title)</AppFullName>
      <AppFullName Condition="'$(AppFullName)' == ''">$(AppShortName)</AppFullName>
      <AppCopyright Condition="'$(AppCopyright)' == ''">$(Copyright)</AppCopyright>
      <AppDescription Condition="'$(AppDescription)' == ''">$(Description)</AppDescription>
      <AppMinWindowsVersion Condition="'$(AppMinWindowsVersion)' == ''">10.0.10240</AppMinWindowsVersion> <!-- Default to Windows 10 / 11 only -->
    </PropertyGroup>

    <PropertyGroup>
      <InnoSetupIncludePath Condition="'%(PublishFolder.Identity)' == '$(PublishingFolder)'">%(PublishFolder.InnoSetupIncludePath)</InnoSetupIncludePath>
    </PropertyGroup>

    <ItemGroup>
      <InnoSetupConstant Include="COMPANY_SHORTNAME" Value="$(CompanyShortName)" />
      <InnoSetupConstant Include="COMPANY_FULLNAME" Value="$(CompanyFullName)" />
      <InnoSetupConstant Include="COMPANY_WEBSITE" Value="$(CompanyWebSite)" />
      <InnoSetupConstant Include="COMPANY_SUPPORTPHONE" Value="$(CompanySupportPhone)" />
      <InnoSetupConstant Include="APP_EXENAME" Value="$(AssemblyName)" />
      <InnoSetupConstant Include="APP_SHORTNAME" Value="$(AssemblyName)" />
      <InnoSetupConstant Include="APP_FULLNAME" Value="$(AssemblyName)" />
      <InnoSetupConstant Include="APP_COMMENTS" Value="$(AppComments)" />
      <InnoSetupConstant Include="APP_CONTACT" Value="$(AppContact)" />
      <InnoSetupConstant Include="APP_COPYRIGHT" Value="$(AppCopyright)" />
      <InnoSetupConstant Include="APP_DESCRIPTION" Value="$(AppDescription)" />
      <InnoSetupConstant Include="APP_VERSION" Value="$(VersionPrefix)" />
      <InnoSetupConstant Include="APP_SEMANTIC_VERSION" Value="$(AssemblyInformationalVersion)" />
      <InnoSetupConstant Include="APP_MINWINDOWSVERSION" Value="$(AppMinWindowsVersion)" />
      <InnoSetupConstant Include="SOURCE_DIR" Value="$(PublishDir)" />
      <InnoSetupConstant Include="SETUP_DIR" Value="$(ArtifactsDirectory)$(Configuration)\$(MSBuildProjectName)" />
    </ItemGroup>

    <ItemGroup>
      <InnoSetupIncludeLine Include="#define %(InnoSetupConstant.Identity) '$([System.String]::new(&quot;%(InnoSetupConstant.Value)&quot;).Replace(&quot;'&quot;, &quot;''&quot;))'" />
    </ItemGroup>

    <WriteLinesToFile File="$(InnoSetupIncludePath)"
                      Lines="@(InnoSetupIncludeLine)"
                      Overwrite="true" />

    <ItemGroup>
      <InnoSetupIncludeLines Remove="@(InnoSetupIncludeLines)" />
    </ItemGroup>

  </Target>

  <!-- Generate setup -->

  <ItemGroup>
    <PackageReference Include="Tools.InnoSetup"
                      IncludeAssets="build"
                      ExcludeAssets="runtime"
                      PrivateAssets="all" />
  </ItemGroup>

  <Target Name="CompleteInnoSetupScriptMetadata"
          DependsOnTargets="CompletePublishFolderMetadata">

    <CreateItem Include="@(InnoSetupScript)"
                AdditionalMetadata="PFIdentity=%(PublishFolder.Identity);
                                    TargetFramework=%(PublishFolder.TargetFramework);
                                    SourceDir=%(PublishFolder.PublishDir);
                                    IncludePath=$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '%(PublishFolder.InnoSetupIncludePath)'))">
      <Output ItemName="_Temp" TaskParameter="Include" />
    </CreateItem>

    <ItemGroup>
      <_Temp Remove="%(_Temp.Identity)"
             Condition="'%(_Temp.PFIdentity)' != '%(_Temp.UsePublishFolder)'" />
    </ItemGroup>

    <ItemGroup>
      <InnoSetupScript Remove="@(InnoSetupScript)" />
      <InnoSetupScript Include="@(_Temp)"
                       RemoveMetadata="PFIdentity" />
      <_Temp Remove="@(_Temp)" />
    </ItemGroup>

  </Target>

  <PropertyGroup>
    <PackDependsOn>$(PackDependsOn);ProcessInnoSetupScripts</PackDependsOn>
  </PropertyGroup>

  <Target Name="ProcessInnoSetupScripts"
          DependsOnTargets="PublishInPublishFolders;CompleteInnoSetupScriptMetadata"
          Condition="@(InnoSetupScript->Count()) > 0">

    <MSBuild Projects="$(MSBuildProjectFile)"
             Targets="GenerateSetup"
             Properties="TargetFramework=%(InnoSetupScript.TargetFramework);
                         InnoSetupScriptFullPath=%(InnoSetupScript.FullPath);
                         InnoSetupIncludePath=%(InnoSetupScript.IncludePath)" />

  </Target>

  <Target Name="GenerateSetup">

    <PropertyGroup>
      <InnoSetupCommandLine>&quot;$(InnoSetupCompiler)&quot; &quot;/J$(InnoSetupIncludePath)&quot; &quot;$(InnoSetupScriptFullPath)&quot;</InnoSetupCommandLine>
    </PropertyGroup>

    <Message Importance="High" Text="&gt;&gt;&gt;&gt;$(InnoSetupCommandLine)&lt;&lt;&lt;&lt;" />

    <Exec Command="$(InnoSetupCommandLine)" />

  </Target>

</Project>
