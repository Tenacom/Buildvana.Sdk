<Project>

  <!--
    Automatically use a <project_name>.nuspec file if present alongside the project file.
    This would be done anyway by NuGet, but we make it more explicit, also enabling all the goodies below.
  -->
  <PropertyGroup Condition="'$(NuspecFile)' == ''">
    <NuspecFile Condition="Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).nuspec')">$(MSBuildProjectName).nuspec</NuspecFile>
  </PropertyGroup>

  <!-- Set NuspecProperties if there is a .nuspec file to use. -->
  <PropertyGroup Condition="'$(NuspecFile)' != ''">
    <NuspecBasePath Condition="'$(NuspecBasePath)' == ''">$(MSBuildProjectDirectory)</NuspecBasePath>
    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);BV_SetNuspecProperties</GenerateNuspecDependsOn>
  </PropertyGroup>

  <!-- Show the nuspec file in Visual Studio, under the "- Package" virtual folder -->
  <ItemGroup Condition="'$(NuspecFile)' != ''">
    <None Remove="$(NuspecFile)" />
    <None Include="$(NuspecFile)" Link="- Package\$([System.IO.Path]::GetFileName('$(NuspecFile)'))" Pack="false" CopyToOutputDirectory="Never" />
  </ItemGroup>

  <Target Name="BV_SetNuspecProperties"
          DependsOnTargets="InitializeSourceControlInformation">

    <!-- Reset 'SourceRevisionId' to default value when not set -->
    <PropertyGroup>
      <SourceRevisionId Condition="'$(SourceRevisionId)' == ''">0</SourceRevisionId>
    </PropertyGroup>

    <PropertyGroup>
      <NuspecProperties>
        minClientVersion=$(MinClientVersion);
        id=$(PackageId);
        title=$(Title);
        version=$(PackageVersion);
        summary=$(Summary);
        description=$(Description);
        owners=$(Owners.Replace(';',','));
        authors=$(Authors.Replace(';',','));
        copyright=$(Copyright);
        configuration=$(Configuration);
        tags=$(PackageTags.Replace(';',','));
        repositoryType=$(RepositoryType);
        repositoryUrl=$(RepositoryUrl);
        projectUrl=$(PackageProjectUrl);
        licenseExpression=$(PackageLicenseExpression);
        licenseFile=$(PackageLicenseFile);
        licensePath=$(PackageLicensePath);
        thirdPartyNoticeFile=$(PackageThirdPartyNoticeFile);
        thirdPartyNoticePath=$(PackageThirdPartyNoticePath);
        readmeFile=$(PackageReadmeFile);
        readmePath=$(PackageReadmePath);
        icon=$(PackageIcon);
        iconPath=$(PackageIconPath);
        requireLicenseAcceptance=$(PackageRequireLicenseAcceptance);
        packageType=$(PackageType);
        releaseNotes=$(PackageReleaseNotes);
        sourceRevisionId=$(SourceRevisionId);
        developmentDependency=$(DevelopmentDependency);
        serviceable=$(Serviceable)
      </NuspecProperties>
    </PropertyGroup>

  </Target>

</Project>
