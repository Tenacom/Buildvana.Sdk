// Copyright (C) Tenacom and Contributors. Licensed under the MIT license.
// See the LICENSE file in the project root for full license information.

using System.Text;
using Microsoft.CodeAnalysis;

namespace Buildvana.Sdk.SourceGenerators.Internal;

internal static class StringBuilderExtensions
{
    public static StringBuilder AppendAutoGenerated(this StringBuilder @this, string? language)
        => language switch {
            LanguageNames.CSharp => @this.AppendLine("// <auto-generated/>"),
            LanguageNames.VisualBasic => @this.AppendLine("' <auto-generated/>"),
            LanguageNames.FSharp => @this.AppendLine("// <auto-generated/>"),
            _ => @this,
        };

    public static StringBuilder AppendBooleanAssemblyAttribute(this StringBuilder @this, string? language, string name, bool? value)
        => value.HasValue
            ? language switch {
                LanguageNames.CSharp => @this.AppendLine($"[assembly:{name}({(value.Value ? "true" : "false")})]"),
                LanguageNames.VisualBasic => @this.AppendLine($"<Assembly:{name}({(value.Value ? "True" : "False")})>"),
                LanguageNames.FSharp => @this.AppendLine($"[<assembly: {name}({(value.Value ? "true" : "false")})>]"),
                _ => @this,
            }
            : @this;
}
